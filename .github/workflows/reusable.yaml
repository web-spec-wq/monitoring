name: Reusable workflow
on: 
 workflow_call:
  inputs:
    version:
      description: 'Version of the Docker image to deploy'
      required: true
      type: string


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup Python and Docker buildx
      uses: ./.github/workflows/actions
      with:
        python-version: '3.12'

    - name: Deploy to Kubernetes
      run: | 
        sed -i "s|image: shrutichittora49/monitoring:.*|image: shrutichittora49/monitoring:${{ inputs.version }}|g" manifests/app-deployment.yaml
    # setup git and commit the changes        
    - name: Setup Git
      run: |
        git config --local user.name "Shruti"
        git config --local user.email "shrutichittora49@gmail.com"
      # Checkout the branch and fetch the latest changes
    - name: Commit changes
      run: | 
        echo "branch_name=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
        git log --oneline
        git fetch origin workflow/integration
        git checkout -B workflow/integration origin/workflow/integration || git checkout -b workflow/integration
        echo "branch_name=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
        git log --oneline
        git add manifests/app-deployment.yaml
        git commit -m "Updated image version to ${{inputs.version}}" || echo "No changes to commit"
    # Push the changes to the branch
    # As we are committing the changes, so to consider the latest changes
    # from the branch, we need to pull the latest changes from the branch before pushing
    # This is to avoid the error: "error: failed to push some refs to 'origin'"
    - name: Push changes
      run: |
        echo "branch_name=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
        git log --oneline
        git pull --rebase origin workflow/integration || echo "Nothing to pull"
        echo "branch_name=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
        git push origin workflow/integration
        git log --oneline

  