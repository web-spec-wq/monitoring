# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and build


on:

  pull_request:
    branches: [ "main" ]


jobs:
  build:
    # runner: ubuntu-latest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v2         
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask prometheus_client pytest
        pip install flake8
#   Testing the python code with flake8 and pytest

    - name: Run linting tests
      run: |
        flake8 --ignore=E501,E203,W503 .

    - name: Docker credentials.
      uses: docker/login-action@v2
      with:
        # registry: docker.io
        username: ${{ secrets.Docker_USERNAME }}
        password: ${{ secrets.Docker_PASSWORD}} 
    # Build the docker image
    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +%Y%m%d%H%M)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.Docker_USERNAME }}/monitoring:$VERSION .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.Docker_USERNAME }}/monitoring:$VERSION

    - name: Deploy to Kubernetes
      run: |
        sed -i "s|image: shrutichittora49/monitoring:.*|image: shrutichittora49/monitoring:$VERSION|g" manifests/app-deployment.yaml
    # setup git and commit the changes        
    - name: Setup Git
      run: |
        git config --local user.name "Shruti"
        git config --local user.email "shrutichittora49@gmail.com"
    - name: Commit changes
      run: | 
        git fetch origin workflow/integration
        git checkout -B workflow/integration origin/workflow/integration || git checkout -b workflow/integration


        git add manifests/app-deployment.yaml
        git commit -m "Updated image version to $VERSION" || echo "No changes to commit"
    # Push the changes to the branch
    - name: Push changes
      run: |
        git pull --rebase origin workflow/integration || echo "Nothing to pull"

        git push origin workflow/integration

      

 